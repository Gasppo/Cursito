{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/seguridadinfromatica/Desktop/FullStack/front/src/pages/_app.tsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { ChakraProvider, ColorModeProvider, CSSReset } from '@chakra-ui/react';\nimport { Provider, createClient } from 'urql';\nconst client = createClient({\n  url: 'http://192.168.0.42:4000/graphql',\n  fetchOptions: {\n    credentials: \"include\"\n  }\n});\nimport theme from '../theme';\n\nfunction MyApp({\n  Component,\n  pageProps\n}) {\n  return /*#__PURE__*/_jsxDEV(Provider, {\n    value: client,\n    children: /*#__PURE__*/_jsxDEV(ChakraProvider, {\n      resetCSS: true,\n      theme: theme,\n      children: /*#__PURE__*/_jsxDEV(ColorModeProvider, {\n        options: {\n          useSystemColorMode: true\n        },\n        children: [/*#__PURE__*/_jsxDEV(CSSReset, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Component, _objectSpread({}, pageProps), void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 5\n  }, this);\n}\n\nexport default MyApp;","map":{"version":3,"sources":["/Users/seguridadinfromatica/Desktop/FullStack/front/src/pages/_app.tsx"],"names":["ChakraProvider","ColorModeProvider","CSSReset","Provider","createClient","client","url","fetchOptions","credentials","theme","MyApp","Component","pageProps","useSystemColorMode"],"mappings":";;;;;;;;;AAAA,SAASA,cAAT,EAAyBC,iBAAzB,EAA4CC,QAA5C,QAA4D,kBAA5D;AACA,SAAQC,QAAR,EAAkBC,YAAlB,QAAqC,MAArC;AAEA,MAAMC,MAAM,GAAGD,YAAY,CAAC;AAACE,EAAAA,GAAG,EAAE,kCAAN;AAA0CC,EAAAA,YAAY,EAAE;AAClFC,IAAAA,WAAW,EAAE;AADqE;AAAxD,CAAD,CAA3B;AAIA,OAAOC,KAAP,MAAkB,UAAlB;;AAEA,SAASC,KAAT,CAAe;AAAEC,EAAAA,SAAF;AAAaC,EAAAA;AAAb,CAAf,EAA8C;AAC5C,sBACE,QAAC,QAAD;AAAU,IAAA,KAAK,EAAEP,MAAjB;AAAA,2BACA,QAAC,cAAD;AAAgB,MAAA,QAAQ,MAAxB;AAAyB,MAAA,KAAK,EAAEI,KAAhC;AAAA,6BACE,QAAC,iBAAD;AACE,QAAA,OAAO,EAAE;AACPI,UAAAA,kBAAkB,EAAE;AADb,SADX;AAAA,gCAKE,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA,gBALF,eAME,QAAC,SAAD,oBAAeD,SAAf;AAAA;AAAA;AAAA;AAAA,gBANF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,UADF;AAcD;;AAED,eAAeF,KAAf","sourcesContent":["import { ChakraProvider, ColorModeProvider, CSSReset } from '@chakra-ui/react'\nimport {Provider, createClient} from 'urql'\n\nconst client = createClient({url: 'http://192.168.0.42:4000/graphql', fetchOptions: {\n  credentials: \"include\",\n}})\n\nimport theme from '../theme'\n\nfunction MyApp({ Component, pageProps }: any) {\n  return (\n    <Provider value={client}>\n    <ChakraProvider resetCSS theme={theme}>\n      <ColorModeProvider\n        options={{\n          useSystemColorMode: true,\n        }}\n      >\n        <CSSReset/>\n        <Component {...pageProps} />\n      </ColorModeProvider>\n    </ChakraProvider>\n    </Provider>\n  )\n}\n\nexport default MyApp\n"]},"metadata":{},"sourceType":"module"}