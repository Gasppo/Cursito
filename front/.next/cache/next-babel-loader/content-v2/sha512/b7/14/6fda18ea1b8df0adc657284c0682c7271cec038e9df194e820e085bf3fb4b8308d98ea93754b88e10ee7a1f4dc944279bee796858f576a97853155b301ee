{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/seguridadinfromatica/Desktop/FullStack/front/src/pages/register.tsx\";\nimport React from \"react\";\nimport { Formik, Form } from \"formik\";\nimport { Box, Button } from \"@chakra-ui/react\";\nimport { Wrapper } from \"../components/Wrapper\";\nimport { InputField } from \"../components/InputField\";\nimport { useRegisterMutation } from \"../generated/graphql\";\nimport { toErrorMap } from \"../utils/toErrorMap\";\n\nconst Register = ({}) => {\n  const [{}, register] = useRegisterMutation();\n  return /*#__PURE__*/_jsxDEV(Wrapper, {\n    variant: \"small\",\n    children: /*#__PURE__*/_jsxDEV(Formik, {\n      initialValues: {\n        username: \"\",\n        password: \"\"\n      },\n      onSubmit: async (values, {\n        setErrors\n      }) => {\n        var _response$data;\n\n        console.log(values);\n        const response = await register(values);\n\n        if ((_response$data = response.data) !== null && _response$data !== void 0 && _response$data.register.errors) {\n          setErrors(toErrorMap(response.data.register.errors));\n        }\n      },\n      children: ({\n        isSubmitting\n      }) => /*#__PURE__*/_jsxDEV(Form, {\n        children: [/*#__PURE__*/_jsxDEV(InputField, {\n          name: \"username\",\n          placeholder: \"username\",\n          label: \"username\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          mt: 4,\n          children: /*#__PURE__*/_jsxDEV(InputField, {\n            name: \"password\",\n            placeholder: \"password\",\n            label: \"Password\",\n            type: \"password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          isLoading: isSubmitting,\n          color: \"teal\",\n          children: \"Registrarse\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n};\n\nexport default Register;","map":{"version":3,"sources":["/Users/seguridadinfromatica/Desktop/FullStack/front/src/pages/register.tsx"],"names":["React","Formik","Form","Box","Button","Wrapper","InputField","useRegisterMutation","toErrorMap","Register","register","username","password","values","setErrors","console","log","response","data","errors","isSubmitting"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,MAAT,EAAiBC,IAAjB,QAA6B,QAA7B;AACA,SAKEC,GALF,EAMEC,MANF,QAOO,kBAPP;AAQA,SAASC,OAAT,QAAwB,uBAAxB;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,SAASC,mBAAT,QAAoC,sBAApC;AACA,SAASC,UAAT,QAA2B,qBAA3B;;AAKA,MAAMC,QAAiC,GAAG,CAAC,EAAD,KAAQ;AAChD,QAAM,CAAC,EAAD,EAAKC,QAAL,IAAiBH,mBAAmB,EAA1C;AACA,sBACE,QAAC,OAAD;AAAS,IAAA,OAAO,EAAC,OAAjB;AAAA,2BACE,QAAC,MAAD;AACE,MAAA,aAAa,EAAE;AAAEI,QAAAA,QAAQ,EAAE,EAAZ;AAAgBC,QAAAA,QAAQ,EAAE;AAA1B,OADjB;AAEE,MAAA,QAAQ,EAAE,OAAOC,MAAP,EAAe;AAACC,QAAAA;AAAD,OAAf,KAA+B;AAAA;;AACvCC,QAAAA,OAAO,CAACC,GAAR,CAAYH,MAAZ;AACA,cAAMI,QAAQ,GAAG,MAAMP,QAAQ,CAACG,MAAD,CAA/B;;AACA,8BAAII,QAAQ,CAACC,IAAb,2CAAI,eAAeR,QAAf,CAAwBS,MAA5B,EAAmC;AACjCL,UAAAA,SAAS,CAACN,UAAU,CAACS,QAAQ,CAACC,IAAT,CAAcR,QAAd,CAAuBS,MAAxB,CAAX,CAAT;AACD;AACF,OARH;AAAA,gBAUG,CAAC;AAAEC,QAAAA;AAAF,OAAD,kBACC,QAAC,IAAD;AAAA,gCACE,QAAC,UAAD;AACE,UAAA,IAAI,EAAC,UADP;AAEE,UAAA,WAAW,EAAC,UAFd;AAGE,UAAA,KAAK,EAAC;AAHR;AAAA;AAAA;AAAA;AAAA,gBADF,eAOE,QAAC,GAAD;AAAK,UAAA,EAAE,EAAE,CAAT;AAAA,iCACE,QAAC,UAAD;AACE,YAAA,IAAI,EAAC,UADP;AAEE,YAAA,WAAW,EAAC,UAFd;AAGE,YAAA,KAAK,EAAC,UAHR;AAIE,YAAA,IAAI,EAAC;AAJP;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBAPF,eAeE,QAAC,MAAD;AAAQ,UAAA,IAAI,EAAC,QAAb;AAAsB,UAAA,SAAS,EAAEA,YAAjC;AAA+C,UAAA,KAAK,EAAC,MAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAfF;AAAA;AAAA;AAAA;AAAA;AAAA;AAXJ;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAoCD,CAtCD;;AAwCA,eAAeX,QAAf","sourcesContent":["import React from \"react\";\nimport { Formik, Form } from \"formik\";\nimport {\n  FormControl,\n  FormLabel,\n  Input,\n  FormErrorMessage,\n  Box,\n  Button,\n} from \"@chakra-ui/react\";\nimport { Wrapper } from \"../components/Wrapper\";\nimport { InputField } from \"../components/InputField\";\nimport { useRegisterMutation } from \"../generated/graphql\";\nimport { toErrorMap } from \"../utils/toErrorMap\";\n\ninterface registerProps {}\n\n\nconst Register: React.FC<registerProps> = ({}) => {\n  const [{}, register] = useRegisterMutation();\n  return (\n    <Wrapper variant=\"small\">\n      <Formik\n        initialValues={{ username: \"\", password: \"\" }}\n        onSubmit={async (values, {setErrors}) => {\n          console.log(values);\n          const response = await register(values);\n          if (response.data?.register.errors){\n            setErrors(toErrorMap(response.data.register.errors))\n          }\n        }}\n      >\n        {({ isSubmitting }) => (\n          <Form>\n            <InputField\n              name=\"username\"\n              placeholder=\"username\"\n              label=\"username\"\n              \n            />\n            <Box mt={4}>\n              <InputField\n                name=\"password\"\n                placeholder=\"password\"\n                label=\"Password\"\n                type=\"password\"\n              />\n            </Box>\n            <Button type=\"submit\" isLoading={isSubmitting} color=\"teal\">\n              Registrarse\n            </Button>\n          </Form>\n        )}\n      </Formik>\n    </Wrapper>\n  );\n};\n\nexport default Register;\n"]},"metadata":{},"sourceType":"module"}