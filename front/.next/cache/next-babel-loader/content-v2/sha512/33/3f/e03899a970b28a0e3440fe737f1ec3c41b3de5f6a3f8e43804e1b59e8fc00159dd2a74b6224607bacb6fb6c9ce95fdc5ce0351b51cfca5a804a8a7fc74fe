{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/seguridadinfromatica/Desktop/FullStack/front/src/pages/login.tsx\";\nimport React from \"react\";\nimport { Formik, Form } from \"formik\";\nimport { Box, Button } from \"@chakra-ui/react\";\nimport { Wrapper } from \"../components/Wrapper\";\nimport { InputField } from \"../components/InputField\";\nimport { useLoginMutation } from \"../generated/graphql\";\nimport { toErrorMap } from \"../utils/toErrorMap\";\nimport { useRouter } from \"next/router\";\n\nconst Login = ({}) => {\n  const [{}, login] = useLoginMutation();\n  const router = useRouter();\n  return /*#__PURE__*/_jsxDEV(Wrapper, {\n    variant: \"small\",\n    children: /*#__PURE__*/_jsxDEV(Formik, {\n      initialValues: {\n        username: \"\",\n        password: \"\"\n      },\n      onSubmit: async (values, {\n        setErrors\n      }) => {\n        var _response$data, _response$data3;\n\n        console.log(values);\n        const response = await login({\n          options: values\n        });\n\n        if ((_response$data = response.data) !== null && _response$data !== void 0 && _response$data.login.errors) {\n          var _response$data2;\n\n          console.log((_response$data2 = response.data) === null || _response$data2 === void 0 ? void 0 : _response$data2.login.errors);\n          setErrors(toErrorMap(response.data.login.errors));\n        } else if ((_response$data3 = response.data) !== null && _response$data3 !== void 0 && _response$data3.login.user) {\n          //Creado bien\n          router.push(\"/\");\n        }\n      },\n      children: ({\n        isSubmitting\n      }) => /*#__PURE__*/_jsxDEV(Form, {\n        children: [/*#__PURE__*/_jsxDEV(InputField, {\n          name: \"username\",\n          placeholder: \"username\",\n          label: \"username\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          mt: 4,\n          children: /*#__PURE__*/_jsxDEV(InputField, {\n            name: \"password\",\n            placeholder: \"password\",\n            label: \"Password\",\n            type: \"password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          isLoading: isSubmitting,\n          color: \"teal\",\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n};\n\nexport default Login;","map":{"version":3,"sources":["/Users/seguridadinfromatica/Desktop/FullStack/front/src/pages/login.tsx"],"names":["React","Formik","Form","Box","Button","Wrapper","InputField","useLoginMutation","toErrorMap","useRouter","Login","login","router","username","password","values","setErrors","console","log","response","options","data","errors","user","push","isSubmitting"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,MAAT,EAAiBC,IAAjB,QAA6B,QAA7B;AACA,SAEEC,GAFF,EAGEC,MAHF,QAIO,kBAJP;AAKA,SAASC,OAAT,QAAwB,uBAAxB;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,SAASC,gBAAT,QAAsD,sBAAtD;AACA,SAASC,UAAT,QAA2B,qBAA3B;AAEA,SAAQC,SAAR,QAAwB,aAAxB;;AAKA,MAAMC,KAAmB,GAAG,CAAC,EAAD,KAAQ;AAClC,QAAM,CAAC,EAAD,EAAKC,KAAL,IAAcJ,gBAAgB,EAApC;AACA,QAAMK,MAAM,GAAGH,SAAS,EAAxB;AACA,sBACE,QAAC,OAAD;AAAS,IAAA,OAAO,EAAC,OAAjB;AAAA,2BACE,QAAC,MAAD;AACE,MAAA,aAAa,EAAE;AAAEI,QAAAA,QAAQ,EAAE,EAAZ;AAAgBC,QAAAA,QAAQ,EAAE;AAA1B,OADjB;AAEE,MAAA,QAAQ,EAAE,OAAOC,MAAP,EAAe;AAACC,QAAAA;AAAD,OAAf,KAA+B;AAAA;;AACvCC,QAAAA,OAAO,CAACC,GAAR,CAAYH,MAAZ;AACA,cAAMI,QAAQ,GAAG,MAAMR,KAAK,CAAC;AAAES,UAAAA,OAAO,EAAEL;AAAX,SAAD,CAA5B;;AACA,8BAAII,QAAQ,CAACE,IAAb,2CAAI,eAAeV,KAAf,CAAqBW,MAAzB,EAAgC;AAAA;;AAC5BL,UAAAA,OAAO,CAACC,GAAR,oBAAYC,QAAQ,CAACE,IAArB,oDAAY,gBAAeV,KAAf,CAAqBW,MAAjC;AACFN,UAAAA,SAAS,CAACR,UAAU,CAACW,QAAQ,CAACE,IAAT,CAAcV,KAAd,CAAoBW,MAArB,CAAX,CAAT;AACD,SAHD,MAIK,uBAAIH,QAAQ,CAACE,IAAb,4CAAI,gBAAeV,KAAf,CAAqBY,IAAzB,EAA8B;AACjC;AACAX,UAAAA,MAAM,CAACY,IAAP,CAAY,GAAZ;AACD;AACF,OAbH;AAAA,gBAeG,CAAC;AAAEC,QAAAA;AAAF,OAAD,kBACC,QAAC,IAAD;AAAA,gCACE,QAAC,UAAD;AACE,UAAA,IAAI,EAAC,UADP;AAEE,UAAA,WAAW,EAAC,UAFd;AAGE,UAAA,KAAK,EAAC;AAHR;AAAA;AAAA;AAAA;AAAA,gBADF,eAME,QAAC,GAAD;AAAK,UAAA,EAAE,EAAE,CAAT;AAAA,iCACE,QAAC,UAAD;AACE,YAAA,IAAI,EAAC,UADP;AAEE,YAAA,WAAW,EAAC,UAFd;AAGE,YAAA,KAAK,EAAC,UAHR;AAIE,YAAA,IAAI,EAAC;AAJP;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBANF,eAcE,QAAC,MAAD;AAAQ,UAAA,IAAI,EAAC,QAAb;AAAsB,UAAA,SAAS,EAAEA,YAAjC;AAA+C,UAAA,KAAK,EAAC,MAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAdF;AAAA;AAAA;AAAA;AAAA;AAAA;AAhBJ;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAwCD,CA3CD;;AA6CA,eAAef,KAAf","sourcesContent":["import React from \"react\";\nimport { Formik, Form } from \"formik\";\nimport {\n\n  Box,\n  Button,\n} from \"@chakra-ui/react\";\nimport { Wrapper } from \"../components/Wrapper\";\nimport { InputField } from \"../components/InputField\";\nimport { useLoginMutation, useRegisterMutation } from \"../generated/graphql\";\nimport { toErrorMap } from \"../utils/toErrorMap\";\n\nimport {useRouter} from \"next/router\"\nimport Register from \"./register\";\n\n\n\nconst Login: React.FC<{}> = ({}) => {\n  const [{}, login] = useLoginMutation();\n  const router = useRouter();\n  return (\n    <Wrapper variant=\"small\">\n      <Formik\n        initialValues={{ username: \"\", password: \"\" }}\n        onSubmit={async (values, {setErrors}) => {\n          console.log(values);\n          const response = await login({ options: values});\n          if (response.data?.login.errors){\n              console.log(response.data?.login.errors)\n            setErrors(toErrorMap(response.data.login.errors))\n          }\n          else if (response.data?.login.user){\n            //Creado bien\n            router.push(\"/\");\n          }\n        }}\n      >\n        {({ isSubmitting }) => (\n          <Form>\n            <InputField\n              name=\"username\"\n              placeholder=\"username\"\n              label=\"username\"\n            />\n            <Box mt={4}>\n              <InputField\n                name=\"password\"\n                placeholder=\"password\"\n                label=\"Password\"\n                type=\"password\"\n              />\n            </Box>\n            <Button type=\"submit\" isLoading={isSubmitting} color=\"teal\">\n              Login\n            </Button>\n          </Form>\n        )}\n      </Formik>\n    </Wrapper>\n  );\n};\n\nexport default Login;"]},"metadata":{},"sourceType":"module"}